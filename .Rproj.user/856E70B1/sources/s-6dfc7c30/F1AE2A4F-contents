# Visualize the efficiency of the human observers.
plot_efficiency <- function(model.psychometrics.efficiency, plotType = 1) {
  library(dplyr)
  library(ggplot2)
  library(tidyr)
  library(grid)
  
  summarize <- dplyr::summarise
  
  load('~/Dropbox/Calen/Work/occluding/occlusion_detect/_data/_model_response/human.psychometrics.rdata')
  load("~/Dropbox/Calen/Work/occluding/occlusion_detect/_data/_model_response/model.psychometric.unscaled.rdata")
  
  model.psychometrics.efficiency         <- get_dprime_at_eccentricity(model.psychometric.unscaled, human.psychometrics)
  
  bin.values <- get_experiment_bin_values()
  
  efficiency.df <- left_join(model.psychometrics.efficiency, bin.values, by = c("TARGET", "BIN"))
  
  if(plotType == 1) { # cardinal axis
    efficiency.df.1 <- efficiency.df %>% 
      mutate(efficiency = 1 / dprime_at_threshold) %>% 
      group_by(TARGET, BIN, observer, statType, statValue) %>% 
      summarize(efficiency = mean(efficiency))
    
    efficiency.df.1$observer <- factor(efficiency.df.1$observer, levels = c("optimal", "nocov", "mahalanobis"), labels = c("Optimal", "No Covariance", "Mahalanobis"))    
    # Efficiency by statistic    
    fig <- efficiency.df.1 %>%
      group_by(statType) %>%
      nest() %>%
      mutate(fig = map2(statType, data, function(statType, data) {
        efficiency.df <- data
        
        x.lab <- ifelse(statType == "Lvals", "Luminance (%)", ifelse(statType == "Cvals", "Contrast (RMS)", "Similarity"))
        
        x.range <- ifelse(statType == "Lvals", c(0,60), ifelse(statType == "Cvals", c(0,.8), c(.3,.9)))
        
        #efficiency.df$observer <- factor(efficiency.df$observer, levels = c("mahalanobis", "nocov", "optimal"), labels = c("Mahalanobis", "No Covariance", "Optimal"))
        
        fig.1 <- ggplot(efficiency.df, aes(x = statValue, y = efficiency, colour = TARGET)) +
          geom_point(size = 4) +
          geom_line(size = 2) +
          facet_grid(~observer) +
          theme_set(theme_minimal(base_size = 30))  +# pre-set the bw theme.
          theme.1 +
          theme(aspect.ratio = 1, 
                axis.title.y = element_text(angle = 0, vjust = .5)) +
          expand_limits(x = x.range, y = c(.1, .3)) +
          scale_color_manual(values = colours.targets) +
          xlab(x.lab) +
          ylab(expression(sqrt(eta)))
        
        plot(fig.1)
        ggsave(file = paste0("~/Dropbox/Calen/Work/occluding/paper/figures/efficiency/efficiency_", statType, '_', first(data$model), ".pdf"), width = 15, height = 5, useDingbats = FALSE)
      }))

    } else if(plotType == 2) {
      
      efficiency.df.2 <- efficiency.df %>% 
        mutate(efficiency = 1 / dprime_at_threshold) %>% 
        group_by(TARGET, BIN, observer, statType, statValue) %>% 
        summarize(efficiency = mean(efficiency))
      
      efficiency.df.2$observer <- factor(efficiency.df.2$observer, levels = c("optimal", "nocov", "mahalanobis"), labels = c("Optimal", "No Covariance", "Mahalanobis"))          
      
      efficiency.by.ecc <- efficiency.df %>% group_by(TARGET, eccentricity) %>% summarize(eff.avg = mean(efficiency))
    
    # Efficiency by statistic    
    fig.1 <- ggplot(efficiency.by.ecc, aes(x = eccentricity, y = eff.avg, colour = TARGET)) +
      geom_point(size = 2) +
      geom_line(size = 1.25) +
      facet_grid(~observer) +
      theme_set(theme_minimal(base_size = 30))  +# pre-set the bw theme.
      theme.1 +
      theme(aspect.ratio = 1, 
            axis.title.y = element_text(angle = 0, vjust = .5)) +
      expand_limits(x = c(0), y = c(0, .3)) +
      scale_color_manual(values = colours.targets) +
      xlab(x.lab) +
      ylab(expression(sqrt(eta)))
  
    plot(fig.1)  
    ggsave(file = "~/Dropbox/Calen/Dropbox/efficiency_eccentricity.pdf", width = 25, height = 25)
   }
  }

plot.model.psychometric <- function(model.psychometrics) {
  library(ggplot2)

  dprime.vals <- map(model.psychometrics$data, function(x) data.frame(eccentricity = x$eccentricity, dprime = x$dprime))
  
  
  model.psychometrics$response <- dprime.vals
  
  map.observer <- model.psychometrics %>% group_by(TARGET, BIN, observer) %>% nest()
  
  psychometric.dat <- map(map.observer$data, function(x) {
    dprime_hat <- x$d0 * x$e0^x$b / (x$e0^x$b + seq(0, 23, .1)^x$b)
    
    data.frame(eccentricity = seq(0, 23, .1), dprime = dprime_hat)
  })
  
  model.psychometrics$psychometric.dat <- psychometric.dat
  
  psychometric.dat.1 <- model.psychometrics %>% select(-response) %>% unnest(psychometric.dat)
  psychometric.dat.2 <- model.psychometrics %>% select(-psychometric.dat) %>% unnest(response)
  
  fig.1 <- ggplot(data = psychometric.dat.1, aes(x = eccentricity, y = dprime, colour = observer)) + 
    geom_line() + 
    geom_point(data = psychometric.dat.2, aes(x = eccentricity, y = dprime, colour = observer)) + 
    facet_wrap(TARGET ~ BIN, ncol = 15, scale = "free") + 
    theme_set(theme_gray(base_size = 18)) +
    theme(aspect.ratio = 1)
  
  ggsave(plot = fig.1, filename = "~/Dropbox/Calen/Dropbox/model.psychometrics.pdf", device = "pdf", width = 40, height = 30)
}

plot.correlation.observers <- function(observer.dprime) {
  
  obs.1 <- observer.dprime %>% select(BIN, TARGET, observer, eccentricity, dprime) %>% spread(observer, dprime)
  
  obs.1[,4] <- scale(obs.1[,4])
  obs.1[,6] <- scale(obs.1[,6])
  
  fig.10 <- ggplot(obs.1, aes_string(x = "optimal", y = "mahalanobis", colour = "TARGET")) + 
    geom_point(size = point.sz) +
    labs(colour = "") +
    xlab(expression("d'"["norm"]~~"(Mahalanobis)")) +
    ylab(expression("d'"["norm"]~~"(Optimal)")) +
    theme.1 +
    scale_colour_manual(values = colours.targets)
    
  ggsave(fig.10, filename = '~/Dropbox/Calen/Work/occluding/occlusion_detect/_paper1figures/cue_correlation.pdf', scale = 2)
}

plot.correlation.optimal.human <- function() {
  library('latex2exp')
  library(dplyr)
  
  summarize = dplyr::summarise
  
  load("~/Dropbox/Calen/Work/occluding/occlusion_detect/_data/_model_response/human.psychometrics.rdata")
  load("~/Dropbox/Calen/Work/occluding/occlusion_detect/_data/_model_response/model.psychometrics.scaled.rdata")
  
  human.threshold <- get_threshold(human.psychometrics)
  model.threshold <- get_threshold(model.psychometrics.scaled)
  
  human.threshold <- human.threshold[, c("TARGET", "BIN", "observer", "threshold")] 
  human.threshold <- human.threshold %>% group_by(BIN, TARGET) %>% summarize(threshold = mean(threshold)) %>% mutate(observer = "human")
  
  model.threshold <- model.threshold[, c("TARGET", "BIN", "observer", "threshold")] 
  
  threshold.1 <- rbind(human.threshold %>% data.frame(), model.threshold %>% data.frame())
  
  threshold.2 <- threshold.1 %>% filter(observer %in% c("human", "optimal")) %>% group_by(BIN, TARGET) %>% spread(observer, threshold)
  
  threshold.3 <- threshold.2
  
  threshold.3[,3] <- scale(threshold.2[,3])
  threshold.3[,4] <- scale(threshold.2[,4])
  
  threshold.3$outlier <- as.factor(ifelse((threshold.3[,3] > 2) | (threshold.3[,4] > 2), 1, 0))

  threshold.3$observer <- factor(threshold.3$observer, levels = c("optimal", "nocov", "mahalanobis"), labels = c("Optimal", "Mahalanobis", "No Covariance"))
  
  x.lab <- TeX("$Human Eccentricity (\\degree)$")
  fig.2 <- ggplot(threshold.3, aes_string(x = "human", y = "optimal", colour = "TARGET")) + 
    geom_point(size = point.sz) +
    labs(colour = "") +
    xlab(x.lab) +
    theme.1 +
    xlab("Eccentricity Threshold (z)") +
    ylab("Eccentricity Threshold (z)") +
    theme.1 +
    scale_colour_manual(values = colours.targets) + 
    guides(shape = FALSE) +
    geom_smooth(method = "lm", se = F, size = 2,colour = colour.regression) +
    expand_limits(x = c(-2,4), y = c(-2,4))
  
  plot(fig.2)
  
  ggsave(filename = '~/Dropbox/Calen/Work/occluding/paper/figures/correlations/model_human_correlation.pdf', plot = fig.2, scale = 3, useDingbats = FALSE)
}